df_raw <- data.frame(var1=c(1, 2, 3), var2=c(2, 3, 2))
df_raw
# 기본 함수(내장 함수)
df_raw1 <- df_raw
# 기본 함수(내장 함수)
df_raw1 <- df_raw
names(df_raw1) <- c("v1", "v2")
df_raw1
# dplyr
df_raw2 <- df_raw
rename(df_raw2, v1=var1, v2=var2)
##### 결측치 처리 #####
read.csv("../data/dataset.csv")
##### 결측치 처리 #####
ds1 <- read.csv("../data/dataset.csv")
ds1
str(ds1)
##### 결측치 처리 #####
ds1 <- read.csv("../data/dataset.csv")
str(ds1)
# 결측치 확인
summary(ds1$price)
sum(ds1$price)
# 결측치 삭제
sum(ds1$price, na.rm = T)
ds2 <- na.omit(ds1$price)
summary(ds2)
price2 <- na.omit(ds1$price)
summary(price2)
price3 <- ifelse(is.na(ds1$price), 0, ds1$price)
summary(price3)
sum(price3)
# 결측치 대체 : 0으로 대체
price3 <- ifelse(is.na(ds1$price), 0, ds1$price)
summary(price3)
sum(price3)
# 결측치 대체 : 평균치로 대체
price4 <- ifelse(is.na(ds1$price), round(mean(ds1$price, na.rm = T), 2), ds1$price)
summary(price4)
sum(price4)
### 질적 변수 : 도수분포표, 분할표 => 막대 그래프, 원, ...
table(ds1$gender)
pie(ds1$gender)
### 질적 변수 : 도수분포표, 분할표 => 막대 그래프, 원, ...
table(ds1$gender)
pie(table(ds1$gender))
### 양적 변수 : 산술평균, 조화평균, 중앙값 => 히스토그램, 상자그림, 산포도, 시계열도표, ...
summary(ds1$price)
blot(ds1$price)
plot(ds1$price)
boxplot(ds1$price)
### 질적 변수 : 도수분포표, 분할표 => 막대 그래프, 원, ...
table(ds1$gender)
pie(table(ds1$gender))
### 양적 변수 : 산술평균, 조화평균, 중앙값 => 히스토그램, 상자그림, 산포도, 시계열도표, ...
summary(ds1$price)
plot(ds1$price)
boxplot(ds1$price)
ds2 <- subset(ds1, price >= 2 & price <= 8)
sumarry(ds2$price)
summary(ds2$price)
### 처리
ds2 <- subset(ds1, price >= 2 & price <= 8)
summary(ds2$price)
length(ds2$price)
str(ds2)
str(ds1)
length(ds2$price)
str(ds2)
plot(ds2$price)
boxplot(ds2$price)
summary(ds2$age)
plot(ds2$age)
boxplot(ds2$age)
## 가독성을 위해 데이터 변경(1:서울, 2:인천, 3:대전, 4:대구, 5:시구군)
ds2$resident == 1
## 가독성을 위해 데이터 변경(1:서울, 2:인천, 3:대전, 4:대구, 5:시구군)
ds2$resident[ds2$resident == 1]
## 가독성을 위해 데이터 변경(1:서울, 2:인천, 3:대전, 4:대구, 5:시구군)
ds2$resident2[ds2$resident == 1] <- "1.서울특별시"
ds2$resident2[ds2$resident2 == "1.서울특별시"]
head(ds2)
## 가독성을 위해 데이터 변경(1:서울, 2:인천, 3:대전, 4:대구, 5:시구군)
ds2$resident2[ds2$resident == 1] <- "1.서울특별시"
head(ds2)
ds2$resident2[ds2$resident == 2] <- "2.인천광역시"
ds2$resident2[ds2$resident == 3] <- "3.대전광역시"
ds2$resident2[ds2$resident == 4] <- "4.대구광영시"
ds2$resident2[ds2$resident == 5] <- "5.시구군"
head(ds2)
### Binning : 척도 변경(양적 -> 질적)
### 나이 변수를 청년층(30세 이하), 중년층(31 ~ 55), 장년층(56세 이상)
ds2$age2[ds2$age<=30] <- "청년층"
ds2$age2[ds2$age>30 & ds2$age<=55] <- "중년층"
ds2$age2[ds2$age>56] <- "장년층"
head(ds2)
### 역코딩
table(ds2$survey)
### 역코딩
table(ds2$survey)
t_survey <- ds2$survey
t_survey
c_survey <- 6 - t_survey
ds2$survey2 <- 6 - t_survey
ds2
### 역코딩
table(ds2$survey)
t_survey <- ds2$survey
t_survey
ds2$survey2 <- 6 - t_survey
head(ds2)
### Dummy : 척도 변경(질적 -> 양적)
ds3 <- read.csv("../data/user_data.csv")
ds3
### Dummy : 척도 변경(질적 -> 양적)
ds3 <- read.csv("../data/user_data.csv")
ds3
table(ds3$house_type)
ds3$house_tpye2[ds3$house_tpye == 1 | ds3$house_tpye == 2 ] <- 0
ds3$house_tpye2[ds3$house_tpye == 3 | ds3$house_tpye == 4 ] <- 1
head(ds2)
head(ds3)
ds3$house_type2[ds3$house_type == 1 | ds3$house_type == 2 ] <- 0
ds3$house_type2[ds3$house_type == 3 | ds3$house_type == 4 ] <- 1
head(ds3)
table(ds3$house_type2)
install.packages("reshape2")
library(reshape2)
str(airquality)
head(airquality)
melt(airquality, id.vars = c("Month", "Day"))
melt(airquality, id.vars = c("Month", "Day"),
variable.name = "climate_name", value.name = "climate_value")
# long형을 wide형으로
dcast(m1, Month+Day ~ climate_name)
# wide형을 long형으로
m1 <-melt(airquality, id.vars = c("Month", "Day"),
variable.name = "climate_name", value.name = "climate_value")
# long형을 wide형으로
dcast(m1, Month+Day ~ climate_name)
# 날짜별로 컬럼을 wide하게 변경
dcast(df1, Customer_ID ~ Date)
### 예제1
df1 <- read.csv("../data/data.csv")
# 날짜별로 컬럼을 wide하게 변경
dcast(df1, Customer_ID ~ Date)
# 다시 long형으로 변경
melt(df2, id.vars = "Customer_ID", variable.name = "Date", value.name = "Buy")
data <- read.csv("../data/2019_suicide.csv")
data
##### 실습 : 자살 방지를 위한 도움의 손길은 누구에게? #####
data <- read.csv("../data/2019_suicide.csv")
data
names(total) <- c("연령", "남자사망자수", "남자사망률", "여자사망자수", "여자사망률")
total <- cbind(man, woman)
names(total) <- c("연령", "남자사망자수", "남자사망률", "여자사망자수", "여자사망률")
man <- data[21:39, c(3, 4, 5)]
man
woman <- data[40:58, c(4, 5)]
woman
total <- cbind(man, woman)
names(total) <- c("연령", "남자사망자수", "남자사망률", "여자사망자수", "여자사망률")
##### 실습 : 자살 방지를 위한 도움의 손길은 누구에게? #####
data <- read.csv("../data/2019_suicide.csv")
str(data)
man <- data[21:39, c(3, 4, 5)]
man
woman <- data[40:58, c(4, 5)]
woman
total <- cbind(man, woman)
names(total) <- c("연령", "남자사망자수", "남자사망률", "여자사망자수", "여자사망률")
total
total$age <- 0
total
step <- 5
for(i in 1:19){
total[i, "age"] <- step
step <- step + 5
}
total
# 20살 이하는 10, 21~30은 20, 31~40은 30, ...
total$age2[total$age <= 20] <- 10
total$age2[total$age > 20 & total$age <= 30] <- 20
total$age2[total$age > 30 & total$age <= 40] <- 30
total$age2[total$age > 40 & total$age <= 50] <- 40
total$age2[total$age > 50 & total$age <= 60] <- 50
total$age2[total$age > 60 & total$age <= 70] <- 60
total$age2[total$age > 70 & total$age <= 80] <- 70
total$age2[total$age > 80 & total$age <= 90] <- 80
total$age2[total$age > 90] <- 90
total
str(total)
total$남자사망률 <- as.numeric(total$남자사망률)
total$여자사망률 <- as.numeric(total$여자사망률)
str(total)
total$남자사망자수 <- as.numeric(total$남자사망자수)
total$여자사망자수 <- as.numeric(total$여자사망자수)
str(total)
total$남자사망자수 <- as.integer(total$남자사망자수)
total$여자사망자수 <- as.integer(total$여자사망자수)
str(total)
total %>% group_by(age2) %>% summarize(sum=sum(남자사망자수)) %>% arrange(desc(sum))
library(dplyr)
total %>% group_by(age2) %>% summarize(sum=sum(남자사망자수)) %>% arrange(desc(sum))
total %>% group_by(age2) %>% summarize(sum=sum(여여자사망자수)) %>% arrange(desc(sum))
total %>% group_by(age2) %>% summarize(sum=sum(여여자사망자수)) %>% arrange(desc(sum))
total %>% group_by(age2) %>% summarize(sum=sum(여자사망자수)) %>% arrange(desc(sum))
library(ggplot2)
total_sum <- total %>%
group_by(age2) %>%
summarize(man_sum=sum(남자사망자수)) %>%
arrange(desc(sum))
total_sum <- total %>%
group_by(age2) %>%
summarize(man_sum=sum(남자사망자수), woman_sum=sum(여자사망자수)) %>%
arrange(desc(man_sum))
library(dplyr)
total_sum <- total %>%
group_by(age2) %>%
summarize(man_sum=sum(남자사망자수), woman_sum=sum(여자사망자수)) %>%
ggplot(total_sum, aes(age2, man_sum)) + geom_col()
ggplot(total_sum, aes(age2, man_sum)) + geom_col()
par(mfrow = c(1, 2))
ggplot(total_sum, aes(age2, man_sum)) + geom_col()
ggplot(total_sum, aes(age2, woman_sum)) + geom_col()
par(mfrow = c(1, 1))
ggplot(total_sum, aes(age2, man_sum)) + geom_col()
ggplot(total_sum, aes(age2, woman_sum)) + geom_col()
total %>%
group_by(age2) %>%
summarize(sd_sum=sum(남자사망률), sd_sum=sum(여자사망률))
total %>%
group_by(age2) %>%
summarize(sd_man=sum(남자사망률), sd_woman=sum(여자사망률))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6) + ylim(10, 30)
library(dplyr)
install.packages("foreign")
install.packages("readxl")
library(readxl)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("C:/RData/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
# 복사본 만들기
welfare <- raw_welfare
head(welfare)
tail(welfare)
dim(welfare)
str(welfare)
dim(welfare)
welfare <- rename(welfare, sex=h10_g3, birth=h10_g4, marriage=h10_g10,
religion=h10_g11, income=p1002_8aq1, code_job=h10_eco9,
code_region=h10_reg7)
welfare <- welfare[, c("sex", "birth", "marriage", "religion", "income", "code_job", "code_region")]
str(welfare)
# 성별 변수 검토
table(welfare$sex)
# 원급 변수 검토
table(welfare$income)
# 원급 변수 검토
summary(welfare$income)
gplot(welfare$income) + xlim(0, 1000)
ggplot(welfare$income) + xlim(0, 1000)
gplot(welfare$income) + xlim(0, 1000)
plot(welfare$income) + xlim(0, 1000)
ggplot(welfare$income) + xlim(0, 1000)
qgplot(welfare$income) + xlim(0, 1000)
qplot(welfare$income) + xlim(0, 1000)
# 성별 항목에 대한 이름 변경
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
# 성별 변수에 대한 전처리: 이상치, 결측치
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
table(is.na(welfare$sex))
```{r}
# 성별 변수에 대한 전처리: 이상치, 결측치
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
table(is.na(welfare$sex))
# 월급 변수에 대한 전처리: 이상치, 결측치
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(sex) %>%
summarise(mean_income=mean(income))
sex_income
ggplot(sex_income, aes(sex, mean_income)) + geom_col()
# 변수 검토
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
```{r}
# 이상치 확인
summary(welfare$birth)
# 결측치 확인
table(is.na(welfare$birth))
# 이상치 결측치 처리
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
table(is.na(welfare$birth))
# 파생변수 만들기 - 나이
welfare$age <- 2015 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
qplot(welfare$age)
# 나이에 따른 월급 평균표 만들기
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income=mean(income))
head(age_income)
# 2. 그래프 만들기
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
# 1. 파생변수 만들기 - 연령대
welfare <- welfare %>% mutate(ageg = ifelse(age < 30, "young",
ifelse(age <= 59, "middle", "old")))
table(welfare$ageg)
qplot(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(welfare$income)) %>%
group_by(ageg) %>%
summarise(mean_income=mean(income))
ageg_income
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) + geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
# 1. 연령대 및 성별 월급 평균표 만들기
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%
summarise(mean_income=mean(income))
sex_income
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) + geom_col(position = "dodge")+
scale_x_discrete(limits = c("young","middle","old"))
# 성별 연령별 월급 평균표 만들기
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income=mean(income))
head(sex_age)
# 그래프 만들기
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) + geom_line()
# 변수 검토하기
class(welfare$code_job)
table(welfare$code_job)
head(list_job)
list_job <- read_excel("../data/Koweps_Codebook.xlsx", col_names = T, sheet = 2)
head(list_job)
dim(list_job)
head(list_job)
dim(list_job)
welfare <- left_join(welfare, list_job, by = "code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
# 직업별 월급 차이 분석하기
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(mean_income=mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(data = top10, aes(x = reorder(job, mean_income), y = mean_income)) + geom_col() + coord_flip()
# 하위 10위 추출
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(data = bottom10, aes(x = reorder(job, mean_income), y = mean_income)) + geom_col() + coord_flip() + ylim(0,850)
### 성별 직업 빈도 분석하기
# 남성 직업 빈도 상위 10개 추출
job_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
# 여성 직업 빈도 상위 10개 추출
job_female <- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
# 남성 직업 빈도 상위 10개
ggplot(data = job_male, aes(x = reorder(job, n), y = n)) + geom_col() + coord_flip()
# 여성 직업 빈도 상위 10개
ggplot(data = job_female, aes(x = reorder(job, n), y = n)) + geom_col() + coord_flip()
### 종교 변수 검토 및 전처리하기
# 변수 검토
class(welfare$religion)
table(welfare$religion)
# 종교 유무 이름 부여
welfare$religion <- ifelse(welfare$religion == 1, "yes", "no")
table(welfare$religion)
qplot(welfare$religion)
# 이혼 여부 변수 만들기
welfare$group_marriage <- ifelse(welfare$marriage == 1, "marraige",
ifelse(welfare$marriage == 3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
qplot(welfare$group_marriage)
# 종교 유무에 따른 이혼율 분석하기
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
# 이혼 추출
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
ggplot(data = divorce, aes(x = religion, y = pct)) + geom_col()
### 연령대 및 종교 유무에 따른 이혼율 분석하기
# 연령대 별 이혼율
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
# 초년 제외, 이혼 추출
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce") %>%
select(ageg, pct)
ageg_divorce
# 초년 제외, 이혼 추출
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce") %>%
select(ageg, pct)
ageg_divorce
ggplot(ageg_divorce, aes(ageg, pct)) + geom_col() + geom_text(aes(label = pct)) + xlab("연령") + ylab("이혼율")
# 연령대, 종교 유무, 결혼 상태별 비율표 만들기
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_religion_marriage
# 연령대 및 종교 유무별 이혼율 표 만들기
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(ageg, religion, pct)
df_divorce
ggplot(df_divorce, aes(ageg, pct, fill=religion)) + geom_col(position="dodge") + xlab("연령") + ylab("이혼율")
### 지역 변수 검토 및 전처리하기
# 변수 확인
class(welfare$code_region)
table(welfare$code_region)
# 지역 코드 목록 만들기
list_region <- data.frame(code_region = c(1:7),
region = c("서울", "수도권(인천/경기)",
"부산/경남/울산", "대구/경북",
"대전/충남", "강원/충북",
"광주/전남/전북/제주도"))
list_region
# 지역명 변수 추가
welfare <- left_join(welfare, list_region, by="code_region")
welfare %>%
select(code_region, region) %>%
head
### 지역별 연령대 비율 분석하기
# 지역별 연령대 비율표
region_ageg <- welfare %>%
group_by(region, ageg) %>%
summarise(n=n()) %>%
mutate(pct = round(n/sum(n)*100, 2))
head(region_ageg)
# 그래프
ggplot(region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip() + xlab("지역") + ylab("연령대비율")
# 노년층 비율 내림차순 정렬
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
list_order_old
# 지역별 순서 변수 만들기
order <- list_order_old$region
order
ggplot(region_ageg, aes(region, pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits=order)
ggplot(region_ageg, aes(region, pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits=order)
levels(region_ageg$ageg)
# 연령대 순으로 다시 정렬
ggplot(region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip() + scale_x_discrete(limits=order) + xlab("지역") + ylab("연령대비율")
# 연령대 순으로 다시 정렬
region_ageg$ageg <- factor(region_ageg$ageg, level=c("old", "middle", "young"))
levels(region_ageg$ageg)
ggplot(region_ageg, aes(region, pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits=order) + xlab("지역") + ylab("연령대비율")
